// Auto-generated. Do not edit!

// (in-package object_recognition_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class ObjectRecognitionGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.use_roi = null;
      this.filter_limits = null;
    }
    else {
      if (initObj.hasOwnProperty('use_roi')) {
        this.use_roi = initObj.use_roi
      }
      else {
        this.use_roi = false;
      }
      if (initObj.hasOwnProperty('filter_limits')) {
        this.filter_limits = initObj.filter_limits
      }
      else {
        this.filter_limits = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ObjectRecognitionGoal
    // Serialize message field [use_roi]
    bufferOffset = _serializer.bool(obj.use_roi, buffer, bufferOffset);
    // Serialize message field [filter_limits]
    bufferOffset = _arraySerializer.float32(obj.filter_limits, buffer, bufferOffset, null);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ObjectRecognitionGoal
    let len;
    let data = new ObjectRecognitionGoal(null);
    // Deserialize message field [use_roi]
    data.use_roi = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [filter_limits]
    data.filter_limits = _arrayDeserializer.float32(buffer, bufferOffset, null)
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += 4 * object.filter_limits.length;
    return length + 5;
  }

  static datatype() {
    // Returns string type for a message object
    return 'object_recognition_msgs/ObjectRecognitionGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '49bea2f03a1bba0ad05926e01e3525fa';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Optional ROI to use for the object detection
    bool use_roi
    float32[] filter_limits
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ObjectRecognitionGoal(null);
    if (msg.use_roi !== undefined) {
      resolved.use_roi = msg.use_roi;
    }
    else {
      resolved.use_roi = false
    }

    if (msg.filter_limits !== undefined) {
      resolved.filter_limits = msg.filter_limits;
    }
    else {
      resolved.filter_limits = []
    }

    return resolved;
    }
};

module.exports = ObjectRecognitionGoal;
