;; Auto-generated. Do not edit!


(when (boundp 'object_recognition_msgs::ObjectRecognitionGoal)
  (if (not (find-package "OBJECT_RECOGNITION_MSGS"))
    (make-package "OBJECT_RECOGNITION_MSGS"))
  (shadow 'ObjectRecognitionGoal (find-package "OBJECT_RECOGNITION_MSGS")))
(unless (find-package "OBJECT_RECOGNITION_MSGS::OBJECTRECOGNITIONGOAL")
  (make-package "OBJECT_RECOGNITION_MSGS::OBJECTRECOGNITIONGOAL"))

(in-package "ROS")
;;//! \htmlinclude ObjectRecognitionGoal.msg.html


(defclass object_recognition_msgs::ObjectRecognitionGoal
  :super ros::object
  :slots (_use_roi _filter_limits ))

(defmethod object_recognition_msgs::ObjectRecognitionGoal
  (:init
   (&key
    ((:use_roi __use_roi) nil)
    ((:filter_limits __filter_limits) (make-array 0 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _use_roi __use_roi)
   (setq _filter_limits __filter_limits)
   self)
  (:use_roi
   (&optional __use_roi)
   (if __use_roi (setq _use_roi __use_roi)) _use_roi)
  (:filter_limits
   (&optional __filter_limits)
   (if __filter_limits (setq _filter_limits __filter_limits)) _filter_limits)
  (:serialization-length
   ()
   (+
    ;; bool _use_roi
    1
    ;; float32[] _filter_limits
    (* 4    (length _filter_limits)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _use_roi
       (if _use_roi (write-byte -1 s) (write-byte 0 s))
     ;; float32[] _filter_limits
     (write-long (length _filter_limits) s)
     (dotimes (i (length _filter_limits))
       (sys::poke (elt _filter_limits i) (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _use_roi
     (setq _use_roi (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float32[] _filter_limits
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _filter_limits (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _filter_limits i) (sys::peek buf ptr- :float)) (incf ptr- 4)
     ))
   ;;
   self)
  )

(setf (get object_recognition_msgs::ObjectRecognitionGoal :md5sum-) "49bea2f03a1bba0ad05926e01e3525fa")
(setf (get object_recognition_msgs::ObjectRecognitionGoal :datatype-) "object_recognition_msgs/ObjectRecognitionGoal")
(setf (get object_recognition_msgs::ObjectRecognitionGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Optional ROI to use for the object detection
bool use_roi
float32[] filter_limits

")



(provide :object_recognition_msgs/ObjectRecognitionGoal "49bea2f03a1bba0ad05926e01e3525fa")


